import ctypes
import random
import cv2
import os
import time
import datetime
import sys
# The code
while True:
    print("start")

    Morning_Start = "07:00"
    Morning_End = "12:00"
    #Where the morning files are found - input your full folder directory
    Morning_Pics_File_Dict = r"#:\your\morning\folder\please"
    Aft_Start = "13:00"
    Aft_End = "17:00"
    #Where the afternoon files are found
    Aft_Pics_File_Dict = r"#:\your\aft\folders\please"
    Night_Start = "19:10"
    Night_End = "23:00"
    #Time duration for wallpaper switch in mode 2 (in minutes!!!)
    Mode_2_time_delay = 0.1
    Both_mode_delay = 0.1
    #Where the night files are found
    Night_Pics_File_Dict = r"#:\your\night\folders\please"
    #Where the mode 2 pics are found
    Mode_2_wallpapers = r"#:\your\mode2\folders\please"
    #which directory do your seperate folders exsist in - this code needs all seperate folders to exisist in a root directory
    #for the time being at least
    Root_Dict = r"#:\your\root\folders\please"
    #if run mode 1 and run mode 2 are true - then it will be both mode 1 with mode 2 during interval
    Run_Mode_1 = True

    Run_Mode_2 = True

    Checker = False

    now = datetime.datetime.now().strftime("%H:%M")
    raw_morning_pictures = os.listdir(Morning_Pics_File_Dict)  # gets list of files in the morning dir!
    raw_aft_pictures = os.listdir(Aft_Pics_File_Dict)
    raw_night_pictures = os.listdir(Night_Pics_File_Dict)
    raw_test_pictures = os.listdir(Mode_2_wallpapers)
    if Checker == True:
        print("List of morning raw pics")
        print(raw_morning_pictures)

    morning_picture = [] #Creating arrays to store the full location of the pictures
    aft_picture = []
    night_picture = []
    test_picture = []

    for morningpicture in raw_morning_pictures:
        #concatanates the host path and file path
        mpic = os.path.join(Morning_Pics_File_Dict,morningpicture)
        morning_picture.append(mpic) #adds the full file path in the created array

    if Checker is True:
        print("Below is the complete address of the picture and below still is the list of complete addresses in an array")
        print(mpic)
        print(morning_picture)



    for aftpicture in raw_aft_pictures:
         # concatanates the host path and file path
        apic = os.path.join(Aft_Pics_File_Dict,aftpicture)
        aft_picture.append(apic)



    for nightpicture in raw_night_pictures:
        # concatanates the host path and file path
        npic = os.path.join(Night_Pics_File_Dict,nightpicture)
        night_picture.append(npic)



    for picture in raw_test_pictures:
        # concatanates the host path and file path
        pic = os.path.join(Mode_2_wallpapers,picture)
        test_picture.append(pic)



    # creating activate times!

    def createtriggertimes(starttime):

        intstarttime = datetime.datetime.strptime(starttime, '%H:%M')
        triggerstart = intstarttime - datetime.timedelta(minutes=11)
        triggerend = intstarttime - datetime.timedelta(seconds=1)

        return triggerstart,triggerend


    def inify(time):
        return datetime.datetime.strptime(time, '%H:%M')


    now = datetime.datetime.now()
    current_time = now.replace(year=1900,month=1,day=1)





    def wallpaperdayswitch(Morning_Start,Aft_Start,Night_Start,x):

        Morning_Trigger_Start,Morning_Trigger_End = createtriggertimes(Morning_Start)
        Aft_Trigger_Start, Aft_Trigger_End = createtriggertimes(Aft_Start)
        Night_Trigger_Start, Night_Trigger_End = createtriggertimes(Night_Start)


        if current_time > Morning_Trigger_Start and current_time < Morning_Trigger_End:

            if x is False:
                m = random.randint(0, len(morning_picture) - 1)
                ctypes.windll.user32.SystemParametersInfoW(20, 0, morning_picture[m], 3)
            elif x is True:
                pass

        elif current_time > inify(Morning_Start) and current_time < inify(Morning_End):
            if x is False:
                pass
            if x is True:
                m = random.randint(0, len(morning_picture) - 1)
                ctypes.windll.user32.SystemParametersInfoW(20, 0, morning_picture[m], 3)


        elif current_time > Aft_Trigger_Start   and current_time < Aft_Trigger_End:

            if x is False:
                a = random.randint(0, len(aft_picture) - 1)
                ctypes.windll.user32.SystemParametersInfoW(20, 0, aft_picture[a], 3)
            elif x is True:
                pass

        elif current_time > inify(Aft_Start) and current_time < inify(Aft_End):

            if x is True:
                a = random.randint(0, len(aft_picture) - 1)
                print(f"Now is aft time{a}")
                ctypes.windll.user32.SystemParametersInfoW(20, 0, aft_picture[a], 3)
            elif x is False:
                pass



        elif current_time > Night_Trigger_Start and current_time < Night_Trigger_End:
            if x is False: # mode 1
                n = random.randint(0, len(night_picture) - 1)
                ctypes.windll.user32.SystemParametersInfoW(20, 0, night_picture[n], 3)
                print(n)
            elif x is True: # mode 2
                pass

        elif current_time > inify(Night_Start) and current_time < inify(Night_End):
            if x is True:
                n = random.randint(0, len(night_picture) - 1)
                ctypes.windll.user32.SystemParametersInfoW(20, 0, night_picture[n], 3)
                print(f"Night number: {n}")
            elif x is False:
                pass

        else: #Void for now
            if x is True:
                pass
            elif x is False:
                t = random.randint(0, len(test_picture) - 1)
                ctypes.windll.user32.SystemParametersInfoW(20, 0, test_picture[t], 3)
                print(f"helicopter time{t}")




    def testwallpaperswitch():

        t = random.randint(0,len(test_picture)-1)
        ctypes.windll.user32.SystemParametersInfoW(20, 0, test_picture[t], 3)



    if Run_Mode_1 == True and Run_Mode_2 == False:
        print("Running mode 1")
        # Get error:Type 'str' doesn't have expected attribute '__sub__' - Not sure why
        wallpaperdayswitch(Morning_Start,Aft_Start,Night_Start,True)
        print("Func ran, will loop in 59+ sec")
        time.sleep(6)

    elif Run_Mode_1 == False and Run_Mode_2 == True:
        print("Running mode 2") # Will be done in the future
        testwallpaperswitch()
        print(f"Func ran will reloop in {Mode_2_time_delay} min")
        time.sleep(Mode_2_time_delay * 60)

    elif Run_Mode_1 == False and Run_Mode_2 == False:
        print("Nothing running")
    elif Run_Mode_1 == True and Run_Mode_2 == True:
        print("Running mode 1 and 2")
        # Get error:Type 'str' doesn't have expected attribute '__sub__' - Not sure why
        wallpaperdayswitch(Morning_Start, Aft_Start, Night_Start, False)
        print(f"Func ran, will loop in {Both_mode_delay*60} sec")
        time.sleep(Both_mode_delay*60)

    else:
        print("you done goofed up")





